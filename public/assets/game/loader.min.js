(async()=>{let a=["emulator.js","nipplejs.js","shaders.js","storage.js","gamepad.js","GameManager.js","socket.io.min.js","compression.js"],n="string"==typeof window.EJS_pathtodata?window.EJS_pathtodata:(o=new URL(document.currentScript.src).pathname).substring(0,o.length-o.split("/").pop().length);function t(t){return new Promise(function(o,e){var a=document.createElement("script");a.src="undefined"!=typeof EJS_paths&&"string"==typeof EJS_paths[t]?EJS_paths[t]:t.endsWith("emulator.min.js")?n+t:n+"src/"+t,a.onload=o,a.onerror=()=>{d(t).then(e=>o())},document.head.appendChild(a)})}function i(t){return new Promise(function(o,e){var a=document.createElement("link");a.rel="stylesheet",a.href="undefined"!=typeof EJS_paths&&"string"==typeof EJS_paths[t]?EJS_paths[t]:n+t,a.onload=o,a.onerror=()=>{d(t).then(e=>o())},document.head.appendChild(a)})}async function d(e){console.error("Failed to load "+e);var o=e.includes(".min.")&&!e.includes("socket");if(console[o?"warn":"error"]("Failed to load "+e+" beacuse it's likly that the minified files are missing.\nTo fix this you have 3 options:\n1. You can download the zip from the latest release here: https://github.com/EmulatorJS/EmulatorJS/releases/latest - Stable\n2. You can download the zip from here: https://cdn.emulatorjs.org/latest/data/emulator.min.zip and extract it to the data/ folder. (easiest option) - Beta\n3. You can build the files by running `npm i && npm run build` in the data/minify folder. (hardest option) - Beta\nNote: you will probably need to do the same for the cores, extract them to the data/cores/ folder."),o)if(console.log("Attempting to load non-minified files"),"emulator.min.js"===e)for(let e=0;e<a.length;e++)await t(a[e]);else await i("emulator.css")}if(n.endsWith("/")||(n+="/"),"undefined"!=typeof EJS_DEBUG_XX&&!0===EJS_DEBUG_XX){for(let e=0;e<a.length;e++)await t(a[e]);await i("emulator.css")}else await t("emulator.min.js"),await i("emulator.min.css");var o={};if(o.gameUrl=window.EJS_gameUrl,o.dataPath=n,o.system=window.EJS_core,o.biosUrl=window.EJS_biosUrl,o.gameName=window.EJS_gameName,o.color=window.EJS_color,o.adUrl=window.EJS_AdUrl,o.adMode=window.EJS_AdMode,o.adTimer=window.EJS_AdTimer,o.adSize=window.EJS_AdSize,o.alignStartButton=window.EJS_alignStartButton,o.VirtualGamepadSettings=window.EJS_VirtualGamepadSettings,o.buttonOpts=window.EJS_Buttons,o.volume=window.EJS_volume,o.defaultControllers=window.EJS_defaultControls,o.startOnLoad=window.EJS_startOnLoaded,o.fullscreenOnLoad=window.EJS_fullscreenOnLoaded,o.filePaths=window.EJS_paths,o.loadState=window.EJS_loadStateURL,o.cacheLimit=window.EJS_CacheLimit,o.cheats=window.EJS_cheats,o.defaultOptions=window.EJS_defaultOptions,o.gamePatchUrl=window.EJS_gamePatchUrl,o.gameParentUrl=window.EJS_gameParentUrl,o.netplayUrl=window.EJS_netplayServer,o.gameId=window.EJS_gameID,o.backgroundImg=window.EJS_backgroundImage,o.backgroundBlur=window.EJS_backgroundBlur,o.backgroundColor=window.EJS_backgroundColor,o.controlScheme=window.EJS_controlScheme,o.threads=window.EJS_threads,o.disableCue=window.EJS_disableCue,o.startBtnName=window.EJS_startButtonName,o.softLoad=window.EJS_softLoad,o.screenRecording=window.EJS_screenRecording,o.externalFiles=window.EJS_externalFiles,o.disableDatabases=window.EJS_disableDatabases,o.disableLocalStorage=window.EJS_disableLocalStorage,o.forceLegacyCores=window.EJS_forceLegacyCores,o.noAutoFocus=window.EJS_noAutoFocus,o.videoRotation=window.EJS_videoRotation,o.shaders=Object.assign({},window.EJS_SHADERS,window.EJS_shaders||{}),"string"==typeof window.EJS_language&&"en-US"!==window.EJS_language)try{let e;e="undefined"!=typeof EJS_paths&&"string"==typeof EJS_paths[window.EJS_language]?EJS_paths[window.EJS_language]:n+"localization/"+window.EJS_language+".json",o.language=window.EJS_language,o.langJson=JSON.parse(await(await fetch(e)).text())}catch(e){o.langJson={}}window.EJS_emulator=new EmulatorJS(EJS_player,o),window.EJS_adBlocked=(e,o)=>window.EJS_emulator.adBlocked(e,o),"function"==typeof window.EJS_ready&&window.EJS_emulator.on("ready",window.EJS_ready),"function"==typeof window.EJS_onGameStart&&window.EJS_emulator.on("start",window.EJS_onGameStart),"function"==typeof window.EJS_onLoadState&&window.EJS_emulator.on("loadState",window.EJS_onLoadState),"function"==typeof window.EJS_onSaveState&&window.EJS_emulator.on("saveState",window.EJS_onSaveState),"function"==typeof window.EJS_onLoadSave&&window.EJS_emulator.on("loadSave",window.EJS_onLoadSave),"function"==typeof window.EJS_onSaveSave&&window.EJS_emulator.on("saveSave",window.EJS_onSaveSave)})();